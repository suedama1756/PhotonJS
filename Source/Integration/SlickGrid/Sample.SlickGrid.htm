<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
    <link rel="stylesheet" href="../../../Scripts/SlickGrid/slick.grid.css" type="text/css"/>
    <link rel="stylesheet" href="../../../Scripts/SlickGrid/css/smoothness/jquery-ui-1.8.16.custom.css"
          type="text/css"/>
    <link rel="stylesheet" href="../../../Scripts/SlickGrid/examples/examples.css" type="text/css"/>
    <style type="text/css">
        .description * {
            font-size: 11pt;
        }
    </style>
    <script src="../../../Scripts/jquery-1.7.2.js" type="text/javascript"></script>
    <script src="../../../Output/Photon-debug.js" type="text/javascript"></script>
    <script src="../../../Scripts/SlickGrid/lib/jquery-ui-1.8.16.custom.min.js" type="text/javascript"></script>
    <script src="../../../Scripts/SlickGrid/lib/jquery.event.drag-2.0.min.js" type="text/javascript"></script>
    <script src="../../../Scripts/SlickGrid/slick.core.js" type="text/javascript"></script>
    <script src="../../../Scripts/SlickGrid/slick.editors.js" type="text/javascript"></script>
    <script src="../../../Scripts/SlickGrid/plugins/slick.rowselectionmodel.js" type="text/javascript"></script>
    <script src="../../../Scripts/SlickGrid/slick.grid.js" type="text/javascript"></script>
    <script src="photon.slickGrid.js" type="text/javascript"></script>
    <script type="text/html" id="templates">
        <!-- Template: cell.sum -->
        <table>
            <tr>
                <td data-bind="innerText:a() + ' + ' + b() + ' + ' + c() + ' = '"></td>
            </tr>
            <tr>
                <!-- Primary binding for the template, used for sorting, filtering etc. -->
                <td data-bind="innerText:a() + b() + c(),isPrimary:true"></td>
            </tr>
        </table>
    </script>
    <script type="text/javascript">
        Row = photon.observable.model.define({
            a:{type:'Number'},
            b:{type:'Number'},
            c:{type:'Number'}
        });

        Model = photon.observable.model.define( {
            rows : {
                type:'ObservableArray'
            },
            selectedItem : null,
            randomize : function() {
                var rows = [];
                for (var i = 0; i < 200; i++) {
                    rows.push(new Row({
                        a:Math.floor(Math.random() * 10000),
                        b:Math.floor(Math.random() * 10000),
                        c:Math.floor(Math.random() * 10000)
                    }));
                }
                this.rows(rows);
            }
        });

        rows = [];
        for (var i = 0; i < 200; i++) {
            rows.push(new Row({
                a:Math.floor(Math.random() * 10000),
                b:Math.floor(Math.random() * 10000),
                c:Math.floor(Math.random() * 10000)
            }));
        }

        var templates = new photon.templating.getCache();
        templates.addResourceHtml("grid", $("#templates").html());

        var columns = [
            {id:"A", name:"A", binding:'a', editable:true, sortable:true,width:100},
            {id:"B", name:"B", binding:'b', editable:true, sortable:true,width:100},
            {id:"C", name:"C", binding:'c', editable:true, sortable:true,width:100},
            {
                id:"Sum",
                name:"Sum",
                // "binding" for sorting will be automatically derived from the primary binding of the template
                bindingTemplate:templates.getHtml("grid.cell.sum"),
                sortable:true,
                width:250
            }
        ];

        var options = {
            rowHeight:48,
            editable:true,
            enableAddRow:false,
            enableCellNavigation:true,
            enableTextSelectionOnCells:true,
            asyncEditorLoading:false,
            enableColumnReorder:false,
            multiColumnSort:true
        };

        $(function () {
            var grid = photon.slickGrid.create("#boundExample", [], columns, options);

            var model = new Model({rows:rows});
            photon.binding.applyBindings(model);
        })
    </script>
    <title>Sample.DataTable</title>
</head>
<body id="root">
    <!--<div id="example" style="width:100%;height:300px;"></div>-->
    <button data-action="randomize()">Randomize</button>
    <span data-bind="innerText:selectedItem() ? selectedItem().a() : 'nothing'"></span>
    <div id="boundExample" data-bind="{slick-items:rows}{slick-selectedItem:selectedItem}" style="width:100%;height:300px;" />
    <div style="overflow: scroll;overflow-style: move"></div>
</body>
</html>
